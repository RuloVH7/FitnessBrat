type Food {
  category: String
  categoryLabel: String
  foodId: String
  image: String
  knownAs: String
  label: String
  nutrients: Nutrients
}

type Food1 {
  brand: String
  category: String
  categoryLabel: String
  foodContentsLabel: String
  foodId: String
  image: String
  knownAs: String
  label: String
  nutrients: Nutrients1
  servingSizes: [ServingSizesEntry]
  servingsPerContainer: Int
}

type HintsEntry {
  food: Food1
  measures: [MeasuresEntry]
}

type Links {
  next: Next
}

type MeasuresEntry {
  label: String
  qualified: [QualifiedEntry]
  uri: String
  weight: Float
}

type Next {
  href: String
  title: String
}

type Nutrients {
  CHOCDF: Float
  ENERC_KCAL: Int
  FAT: Float
  FIBTG: Float
  PROCNT: Float
}

type Nutrients1 {
  CHOCDF: Float
  ENERC_KCAL: Int
  FAT: Float
  FIBTG: Float
  PROCNT: Float
}

type ParsedEntry {
  food: Food
}

type QualifiedEntry {
  qualifiers: [QualifiersEntry]
  weight: Int
}

type QualifiersEntry {
  label: String
  uri: String
}

type Root {
  _links: Links
  hints: [HintsEntry]
  parsed: [ParsedEntry]
  text: String
}

type ServingSizesEntry {
  label: String
  quantity: Float
  uri: String
}

type Query {
  mySearchy( ingr: String): Root
    @rest(
      endpoint: "https://api.edamam.com/api/food-database/v2/parser?app_id=$app_id&app_key=$app_key"
      headers: [
        { name: "accept", value: "application/json" }
        {
          name: "authorization"
          value: "Apikey shestipery::local.io+1000::527b507c18fbfb92f2b22162fb6395a6f21b60737f54f2ec6b62bbdd17d72136"
        }
      ]
      configuration: "edamam"
    )
}
